import React from "react";
import PropTypes from "prop-types";
import { withStyles } from "material-ui/styles";
import axios from "axios";
import Input from "material-ui/Input";
import MovieList from "./MovieList";
import "../Views/App.css";

const styles = theme => ({
  container: {
    display: "flex",
    alignItems: "flex-start",
    height: "100%",
    justifyContent: "center"
  },
  input: {
    margin: theme.spacing.unit,
    display: "flex"
  }
});

const API_KEY = "d3b24aad8f7a69f5d20f89822a6102f8";

class SearchMovieInput extends React.Component {
  constructor(props) {
    super(props);
  }

  state = {
    searchText: "",
    data: null
  };

  handleInput = e => {
    //   e.preventDefault();
    const { data } = this.state;
    this.setState({
      searchText: e.target.value
    })
    /////////////////////////uncomment the following line to get live updates as you type
    // this.getMovie();
    if (!this.state.searchText.length) {
      this.setState({
        data: null
      });
    }
  };
  /**
|--------------------------------------------------
| https://api.themoviedb.org/3/search/movie?api_key=d3b24aad8f7a69f5d20f89822a6102f8&language=en-US&query=annie&page=1&include_adult=false
|--------------------------------------------------
*/
  getMovie = () => {
    const { searchText } = this.state;
    axios
      .get(
        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchText}&page=1&include_adult=false`
      )
      .then(response => {
        console.log("The movie response:", response);
        this.setState({
          data: response.data.results
        })
      })
      .catch(error => {
        console.log(error);
      });
  };

  _keyPress = e => {
    //   e.preventDefault();
    if (e.key === "Enter") {
        this.getMovie();
    }
  };

  clearData = () => {
    const { searchText } = this.state;
    if (!searchText) {
      this.setState({
        data: null
      });
    }
  };

  render() {
    console.log("State in Search", this.state);
    const { _keyPress, handleInput } = this;
    const { classes } = this.props;
    const { data, searchText } = this.state;

    return (
      <React.Fragment>
        <div className={classes.container}>
          <Input
            onChange={handleInput}
            onKeyPress={_keyPress}
            placeholder="Search Movies..."
            className={classes.input}
            inputProps={{
              "aria-label": "Description"
            }}
          />
        </div>
        <div className="home-movie-container">
          {searchText ? <MovieList data={data} /> : null}
        </div>
      </React.Fragment>
    );
  }
}

SearchMovieInput.propTypes = {
  classes: PropTypes.object.isRequired
};
// export default withStyles(styles)(SearchMovieInput);



import React from 'react';
import { Redirect } from "react-router";
import { Link, Route } from "react-router-dom";
import PropTypes from 'prop-types';
import { withStyles } from 'material-ui/styles';
import AppBar from 'material-ui/AppBar';
import Toolbar from 'material-ui/Toolbar';
import Typography from 'material-ui/Typography';
import IconButton from 'material-ui/IconButton';
import MenuIcon from '@material-ui/icons/Menu';
import AccountCircle from '@material-ui/icons/AccountCircle';
import Switch from 'material-ui/Switch';
import { FormControlLabel, FormGroup } from 'material-ui/Form';
import Menu, { MenuItem } from 'material-ui/Menu';
import SearchMovieInput from './SearchMovieInput';
import "../Views/App.css";

const styles = {
  root: {
    height: '100%',
    flexGrow: 1,
  },
  flex: {
    flex: 1,
    color:"white"
  },
  menuButton: {
    marginLeft: -12,
    marginRight: 20,
  },
};
/********************************************home******************************/
class Home extends React.Component {
  state = {
    auth: false,
    anchorEl: null,
  };

  handleChange = (event, checked) => {
    console.log("event in change:", event)
    this.setState({ auth: checked });
  };

  handleMenu = event => {
    console.log("event curr:",event.currentTarget)
    this.setState({ anchorEl: event.currentTarget });
  };

  handleClose = () => {
    this.setState({ anchorEl: null });
  };

  render() {
    const { classes, user } = this.props;
    const { auth, anchorEl } = this.state;
    const open = Boolean(anchorEl);
    console.log("State in Home:", this.state)
    console.log("Props in Home:", this.props)

    if (auth ) {
      return <Redirect to="/users/login" />;
    }

    return (
      <div className={classes.root}>
        <FormGroup>
          <FormControlLabel
            control={
              <Switch checked={auth} onChange={this.handleChange} aria-label="LoginSwitch" />
            }
            label={auth ? 'Logout' : 'Login/Sign Up'}
          />
        </FormGroup>
        <AppBar position="sticky">
          <Toolbar>
            {/* <IconButton className={classes.menuButton} color="inherit" aria-label="Menu">
              <MenuIcon />
            </IconButton> */}
            <Typography variant="title" color="inherit" className={classes.flex}>
              Movie Fights!
            </Typography>
            {auth && (
              <div className = "iconbutton-container">
                <IconButton
                  aria-owns={open ? 'menu-appbar' : null}
                  aria-haspopup="true"
                  onClick={this.handleMenu}
                  color="inherit"
                >
                  <AccountCircle />
                </IconButton>
                <Menu
                  id="menu-appbar"
                  anchorEl={anchorEl}
                  anchorOrigin={{
                    vertical: 'top',
                    horizontal: 'right',
                  }}
                  transformOrigin={{
                    vertical: 'top',
                    horizontal: 'right',
                  }}
                  open={open}
                  onClose={this.handleClose}
                >
                  <MenuItem onClick={this.handleClose}>Profile</MenuItem>
                  <MenuItem onClick={this.handleClose}>My Favorites</MenuItem>
                </Menu>
              </div>
            )}
          </Toolbar>
        </AppBar>
        <div className = "search-input-container">
          <SearchMovieInput />
        </div>
      </div>
    );
  }
}

Home.propTypes = {
  classes: PropTypes.object.isRequired,
};

// export default withStyles(styles)(Home);




import React from 'react';
import { Redirect } from "react-router";
import { Link, Route } from "react-router-dom";
import PropTypes from 'prop-types';
import { withStyles } from 'material-ui/styles';
import AppBar from 'material-ui/AppBar';
import Toolbar from 'material-ui/Toolbar';
import Typography from 'material-ui/Typography';
import IconButton from 'material-ui/IconButton';
import MenuIcon from '@material-ui/icons/Menu';
import AccountCircle from '@material-ui/icons/AccountCircle';
import Switch from 'material-ui/Switch';
import { FormControlLabel, FormGroup } from 'material-ui/Form';
import Menu, { MenuItem } from 'material-ui/Menu';
import SearchMovieInput from './SearchMovieInput';
import "../Views/App.css";

const styles = {
  root: {
    height: '100%',
    flexGrow: 1,
  },
  flex: {
    flex: 1,
    color:"white"
  },
  menuButton: {
    marginLeft: -12,
    marginRight: 20,
  },
};

class Home extends React.Component {
  state = {
    auth: false,
    anchorEl: null,
  };

  handleChange = (event, checked) => {
    console.log("event in change:", event)
    this.setState({ auth: checked });
  };

  handleMenu = event => {
    console.log("event curr:",event.currentTarget)
    this.setState({ anchorEl: event.currentTarget });
  };

  handleClose = () => {
    this.setState({ anchorEl: null });
  };

  render() {
    const { classes, user } = this.props;
    const { auth, anchorEl } = this.state;
    const open = Boolean(anchorEl);
    console.log("State in Home:", this.state)
    console.log("Props in Home:", this.props)

    if (auth ) {
      return <Redirect to="/users/login" />;
    }

    return (
      <div className={classes.root}>
        <FormGroup>
          <FormControlLabel
            control={
              <Switch checked={auth} onChange={this.handleChange} aria-label="LoginSwitch" />
            }
            label={auth ? 'Logout' : 'Login/Sign Up'}
          />
        </FormGroup>
        <AppBar position="sticky">
          <Toolbar>
            {/* <IconButton className={classes.menuButton} color="inherit" aria-label="Menu">
              <MenuIcon />
            </IconButton> */}
            <Typography variant="title" color="inherit" className={classes.flex}>
              Movie Fights!
            </Typography>
            {auth && (
              <div className = "iconbutton-container">
                <IconButton
                  aria-owns={open ? 'menu-appbar' : null}
                  aria-haspopup="true"
                  onClick={this.handleMenu}
                  color="inherit"
                >
                  <AccountCircle />
                </IconButton>
                <Menu
                  id="menu-appbar"
                  anchorEl={anchorEl}
                  anchorOrigin={{
                    vertical: 'top',
                    horizontal: 'right',
                  }}
                  transformOrigin={{
                    vertical: 'top',
                    horizontal: 'right',
                  }}
                  open={open}
                  onClose={this.handleClose}
                >
                  <MenuItem onClick={this.handleClose}>Profile</MenuItem>
                  <MenuItem onClick={this.handleClose}>My Favorites</MenuItem>
                </Menu>
              </div>
            )}
          </Toolbar>
        </AppBar>
        <div className = "search-input-container">
          <SearchMovieInput />
        </div>
      </div>
    );
  }
}

Home.propTypes = {
  classes: PropTypes.object.isRequired,
};

export default withStyles(styles)(Home);


// 284054 black panther id

//https://api.themoviedb.org/3/movie/284054?api_key=d3b24aad8f7a69f5d20f89822a6102f8&language=en-US black panther

//770 gone with the wind id
//https://api.themoviedb.org/3/movie/770?api_key=d3b24aad8f7a69f5d20f89822a6102f8&language=en-US Gone with the wind



the old getWinner func...
    // const {movie1, movie2} = this.state
    // let movie1Revenue = movie1.data.revenue
    // let movie2Revenue = movie2.data.revenue
    // let movie1Budget = movie1.data.budget
    // let movie2Budget = movie2.data.budget

    // let movie1MoneyEarned = (movie1Revenue - movie1Budget);
    // let movie2MoneyEarned = (movie2Revenue - movie2Budget);

    // if(movie1MoneyEarned > movie2MoneyEarned){
    //   this.setState({
    //     winner: this.state.movie1.original_title
    //   })
    // } else {
    //   this.setState({
    //     winner: this.state.movie2.original_title
    //   })
    // }

SET THE STATE TO THE WINNER
      // if(Number(this.state.movie1MoneyEarned) > Number(this.state.movie2MoneyEarned)){
    //   this.setState({
    //     winner: this.state.movie1.data.original_title
    //   })
    // } else {
    //   this.setState({
    //     winner: this.state.movie2.data.original_title
    //   })
    // }


        /**
|--------------------------------------------------
| if the e.target.title === winner then set winner to e.target.title and set the loser to 

lead engineer at Joor Roberto Pedroso

Patrick at Plated 

Priceline.com fs dev

Billy at medi corp 

Trevor at current debit card for teens trevor@current.com

jared palmer palmer group jack and nathan 

brian at wework node typescript reat kotlin java


|--------------------------------------------------
*/


this was in RegisterUser.jsx

  // registerNewUserForm = e => {
  //   e.preventDefault();
  //   const {
  //     username,
  //     firstname,
  //     lastname,
  //     email,
  //     password,
  //     registered
  //   } = this.state;

  //   if (username.length < 3) {
  //     this.setState({
  //       message: "Username length must be at least 3 characters."
  //     });
  //     return;
  //   }
  //   axios
  //     .post("/users/register", {
  //       username: username,
  //       password: password,
  //       email: email,
  //       firstname: firstname,
  //       lastname: lastname
  //     })
  //     .then(res => {
  //       console.log("Res.data!", res.data);
  //       this.setState({
  //         registered: true
  //       });
  //     })
  //     .catch(err => {
  //       this.setState({
  //         username: "",
  //         password: "",
  //         lastname: "",
  //         firstname: "",
  //         message: "Username/Password not found"
  //       });
  //     });
  // };